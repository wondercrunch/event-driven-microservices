version: '3.7'
services:
  elastic-1:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION:-latest} #official docker image, version from .env file
    hostname: elastic-1
    environment:
      - TZ=Europe/Moscow
      - node.name=elastic-1 #unique name far each node
      - cluster.name=es-twitter-cluster #cluster name must be same for each node
      - discovery.seed_hosts=elastic-2,elastic-3 #so each node could find others
      - cluster.initial_master_nodes=elastic-1,elastic-2,elastic-3 #3 nodes minimal optimum. As long as more than half of the voting nodes are available the cluster can still work normally. This means that if there are three or four master-eligible nodes, the cluster can tolerate one of them being unavailable.
      - bootstrap.memory_lock=true #prevent swapping
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" #start heap size and max heap size
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01_7_15_2:/usr/share/elasticsearch/data #data persistence
    ports:
      - 9200:9200 #to reach this cluster outside of container
    networks:
      - ${GLOBAL_NETWORK:-elastic}
  elastic-2:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    environment:
      - TZ=Europe/Moscow
      - node.name=elastic-2
      - cluster.name=es-twitter-cluster
      - discovery.seed_hosts=elastic-1,elastic-3
      - cluster.initial_master_nodes=elastic-1,elastic-2,elastic-3
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02_7_15_2:/usr/share/elasticsearch/data
    networks:
      - ${GLOBAL_NETWORK:-elastic}
  elastic-3:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    environment:
      - TZ=Europe/Moscow
      - node.name=elastic-3
      - cluster.name=es-twitter-cluster
      - discovery.seed_hosts=elastic-1,elastic-2
      - cluster.initial_master_nodes=elastic-1,elastic-2,elastic-3
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data03_7_15_2:/usr/share/elasticsearch/data
    networks:
      - ${GLOBAL_NETWORK:-elastic}
  kibana:
    image: docker.elastic.co/kibana/kibana:${ELASTIC_VERSION}
    ports:
      - 5601:5601
    depends_on:
      - elastic-1
      - elastic-2
      - elastic-3
    environment:
      TZ: Europe/Moscow
      ELASTICSEARCH_HOSTS: http://elastic-1:9200
    networks:
      - ${GLOBAL_NETWORK:-elastic}
  logstash:
    image: docker.elastic.co/logstash/logstash:${ELASTIC_VERSION}
    command: logstash -f /etc/logstash/conf.d/logback.conf
    ports:
      - "9600:9600"
    depends_on:
      - elastic-1
      - elastic-2
      - elastic-3
    volumes:
      - ./config/logback.conf:/etc/logstash/conf.d/logback.conf
      - ./docker-logs/logstash:/logs
    environment:
      TZ: Europe/Moscow
      LS_JAVA_OPTS: "-Xms256m -Xmx512m"
      CLUSTER_NAME: es-twitter-cluster
      XPACK_MONITORING_ELASTICSEARCH_HOSTS: http://elastic-1:9200
    networks:
      - ${GLOBAL_NETWORK:-elastic}

volumes:
  data01_7_15_2:
    driver: local
  data02_7_15_2:
    driver: local
  data03_7_15_2:
    driver: local