version: '3.7'
services:
  twitter-to-kafka-service:
    image: ${GROUP_ID}/twittertokafkaservice:${SERVICE_VERSION:-latest}
    ports:
      - "5005:5005" #remote debugging port
    volumes:
      - "./docker-logs:/workspace/twitter-to-kafka-service/logs"
      - "./check-config-server-started.sh:/usr/local/bin/check-config-server-started.sh"
    user: root #to be able to run health check script
    entrypoint: [ "check-config-server-started.sh" ]
    depends_on: #only specifies order, so we still need to check app health with scripts
      - config-server
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    environment:
      - TZ=Europe/Moscow
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Xms128m -Xmx256m" #agentlib - open port to debug app in container
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "KAFKA-CONFIG_TOPIC-NAME=twitter-topic" #values there override values from config server
      - "KAFKA-CONFIG_TOPIC-NAMES-TO-CREATE_0=twitter-topic"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
      - "TWITTER-TO-KAFKA-SERVICE_ENABLE-MOCK-TWEETS=true"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888" #in docker we use dockerized config server, cant use localhost
      - "ENCRYPT_KEY=${ENCRYPT_KEY}"
    networks:
      - ${GLOBAL_NETWORK:-services}
  kafka-to-elastic-service:
    image: ${GROUP_ID}/kafkatoelasticservice:${SERVICE_VERSION:-latest}
    ports:
      - "5006:5006"
    volumes:
      - "./docker-logs:/workspace/kafka-to-elastic-service/logs"
      - "./check-kafka-topics-created.sh:/usr/local/bin/check-kafka-topics-created.sh"
    user: root
    entrypoint: [ "check-kafka-topics-created.sh" ] #we already check in code, this is to show the alternative init logic
    depends_on:
      - config-server
      - twitter-to-kafka-service
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
      - elastic-1
      - elastic-2
      - elastic-3
    environment:
      - TZ=Europe/Moscow
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "KAFKA-CONFIG_TOPIC-NAME=twitter-topic"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
      - "ELASTIC-CONFIG_INDEX-NAME=twitter-index"
      - "ELASTIC-CONFIG_CONNECTION-URL=http://elastic-1:9200"
      - "ELASTIC-CONFIG_IS-REPOSITORY=true"
      - "ENCRYPT_KEY=${ENCRYPT_KEY}"
    networks:
      - ${GLOBAL_NETWORK:-services}
  config-server:
    image: ${GROUP_ID}/configserver:${SERVICE_VERSION:-latest}
    ports:
      - "5007:5007"
      - "8888:8888" #to access config server in container from host machine
    volumes:
      - "./docker-logs:/workspace/config-server/logs"
    environment:
      - TZ=Europe/Moscow
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5007 -Xms128m -Xmx256m"
      - "LOG_APP-NAME=config-server"
      - "ENCRYPT_KEY=${ENCRYPT_KEY}"
      - "GITHUB_TOKEN=${GITHUB_TOKEN}"
    networks:
      - ${GLOBAL_NETWORK:-services}